{"version":3,"sources":["utils/articleCard.js","store/types.js","store/actions/index.js","utils/tools.js","store/actions/article_actions.js","components/home/index.js","components/navigation/search.js","components/navigation/sideNavigation.js","store/actions/users_actions.js","store/actions/site_action.js","components/navigation/header.js","hoc/mainLayout.js","hoc/preventAuthRoute.js","components/auth/index.js","utils/loader.js","hoc/adminLayout.js","components/dashboard/index.js","components/dashboard/profile/stepper/mail.js","components/dashboard/profile/auth.js","components/dashboard/profile/profile.js","components/dashboard/profile/index.js","components/dashboard/articles/paginate.js","components/dashboard/articles/index.js","hoc/authGuard.js","utils/scoreCard.js","components/articles/article/index.js","components/dashboard/articles/validationSchema.js","utils/forms/wysiwyg.js","components/dashboard/articles/addArticle.js","components/dashboard/articles/editArticle.js","components/contact/index.js","components/auth/verification.js","components/dashboard/categories/addCategory.js","components/dashboard/categories/index.js","components/search/index.js","routes.js","store/reducers/users_reducer.js","store/reducers/index.js","store/reducers/articles_reducer.js","store/reducers/site_reducer.js","store/reducers/notification_reducer.js","store/index.js","index.js"],"names":["ArticleCard","article","Card","CardMedia","style","height","paddingTop","image","title","CardContent","overflow","Typography","gutterBottom","variant","component","color","excerpt","CardActions","disableSpacing","IconButton","Button","size","RouterLink","to","_id","GET_ARTICLES","GET_ARTICLE","CLEAR_CURRENT_ARTICLE","ADD_ARTICLE","UPDATE_ARTICLE_STATUS","GET_ADMIN_ARTICLES","GET_CATEGORIES","ADD_CATEGORY","NAV_SEARCH","ERROR_GLOBAL","SUCCESS_GLOBAL","CLEAR_NOTIFICATION","REMOVE_ARTICLE","AUTH_USER","SIGN_OUT","CHANGE_USER_EMAIL","UPDATE_USER_PROFILE","VERIFY_ACCOUNT","SITE_LAYOUT","addArticle","type","payload","getPaginateArticles","articles","getArticle","clearCurrentArticle","getCategories","categories","navSearch","errorGlobal","msg","successGlobal","clearNotification","dispatch","authUser","user","signOut","changeUserEmail","data","updateUserProfile","userData","showToast","toast","success","position","POSITION","BOTTOM_RIGHT","error","getTokenCookie","cookie","load","getAuthHeader","headers","axios","defaults","post","count","getArticles","sort","getState","a","arts","prevArts","newArts","tempCount","length","page","limit","keywords","request","response","message","get","initialSort","sortBy","order","skip","Home","useReducer","state","newState","setSort","useSelector","notification","useState","loadMore","setLoadMore","useDispatch","useEffect","Carousel","className","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Grid","container","spacing","map","item","index","xs","sm","lg","onClick","withRouter","props","formik","useFormik","initialValues","validationSchema","Yup","required","min","onSubmit","value","totalDocs","getNavSearchResults","trim","closeDrawer","history","push","margin","handleSubmit","TextField","id","name","label","getFieldProps","values","errors","touched","helperText","errorHelper","SideDrawer","users","signOutUser","setState","Drawer","anchor","open","onClose","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","auth","appLayout","layout","site","setLayout","location","pathname","split","fontFamily","remove","path","MainLayout","Container","children","PreventAuthRoute","Auth","register","setRegister","disable","setDisable","email","password","resetForm","registerUser","verified","signInUser","width","disabled","Loader","CircularProgress","AdminLayout","role","section","Dashboard","textAlign","firstname","EmailStepper","activeStep","setActiveStep","enableReinitialize","newEmail","test","patch","newemail","handleNext","prevActiveStep","handleBack","nextBtn","backBtn","Stepper","Step","StepLabel","submitForm","AuthProfile","emailModal","setEmailModal","closeModal","alignItems","Modal","centered","show","onHide","Header","closeButton","Title","Body","UserProfile","lastname","age","profile","maxWidth","Profile","PaginationComponent","prev","next","handleShow","handleStatusChange","editArtsAction","goToPrevPage","goToNextPage","docs","Table","striped","bordered","hover","date","score","status","Pagination","hasPrevPage","Prev","prevPage","Item","active","hasNextPage","nextPage","Next","Articles","removeAlert","setRemoveAlert","resetIcon","setResetIcon","loadIcon","setloadIcon","toRemove","setToRemove","loading","setLoading","memory","searchValues","setSearchValues","adminArticles","handleClose","handleDelete","delete","art","findIndex","changeStatusArticle","removeArticle","ButtonToolbar","ButtonGroup","e","preventDefault","InputGroup","Prepend","Text","FormControl","placeholder","onChange","target","Box","display","cursor","fontSize","setTimeout","Footer","authGuard","ComposedComponent","roleCheck","AuthenticationCheck","isAuth","setIsAuth","ScoreCard","current","console","log","ListItemAvatar","Avatar","secondary","category","actors","Chip","clickable","director","Article","match","params","background","dangerouslySetInnerHTML","__html","content","formValues","validation","max","WYSIWYG","editorState","EditorState","createEmpty","editorData","setEditorData","editContent","blockFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","onEditorStateChange","HTMLDATA","stateToHTML","getCurrentContent","setEditorState","wrapperClassName","editorClassName","onBlur","setEditorBlur","AddArticle","editorBlur","isSubmitting","setIsSubmitting","actorsValue","useRef","handleEditorBlur","blur","multiline","rows","setFieldValue","handleEditorState","FormHelperText","render","arrayhelpers","Paper","InputBase","inputRef","actor","onDelete","Select","MenuItem","EditArticle","formData","setFormData","setEditContent","newArticle","Contact","iconStyle","AccountVerification","icon","setIcon","redirect","setRedirect","token","URLSearchParams","search","accountVerify","AddCategory","addCategory","Categories","Row","Col","SearchResults","Routes","Error","AuthGuard","fonts","font","weights","DEFAULT_USER_STATE","appReducers","combineReducers","action","lastAdded","ReduxStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b7025b72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nconst ArticleCard = ({ article }) => {\r\n  return (\r\n    <Card>\r\n      <CardMedia\r\n        style={{ height: 0, paddingTop: \"56.25%\" }}\r\n        image=\"https://picsum.photos/200\"\r\n        title=\"some title\"\r\n      />\r\n\r\n      <CardContent\r\n        style={{\r\n          overflow: \"hidden\",\r\n          height: \"15rem\",\r\n        }}\r\n      >\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {article.title}\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {article.excerpt}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          component={RouterLink}\r\n          to={`/article/${article._id}`}\r\n        >\r\n          View article\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ArticleCard;\r\n","///////////////////Articles///////////////////\r\n\r\nexport const GET_ARTICLES = \"get_articles\";\r\nexport const GET_ARTICLE = \"get_article\";\r\nexport const CLEAR_CURRENT_ARTICLE = \"clear_current_article\";\r\nexport const ADD_ARTICLE = \"add_article\";\r\nexport const UPDATE_ARTICLE_STATUS = \"update_article_status\";\r\nexport const GET_ADMIN_ARTICLES = \"get_admin_articles\";\r\nexport const GET_CATEGORIES = \"get_categories\";\r\nexport const ADD_CATEGORY = \"add_category\";\r\nexport const NAV_SEARCH = \"nav_search\";\r\n\r\n///////////////////Notifications///////////////////\r\nexport const ERROR_GLOBAL = \"error_global\";\r\nexport const SUCCESS_GLOBAL = \"success_global\";\r\nexport const CLEAR_NOTIFICATION = \"clear_notification\";\r\nexport const REMOVE_ARTICLE = \"remove_article\";\r\n\r\n///////////////////User///////////////////\r\nexport const AUTH_USER = \"auth_user\";\r\nexport const SIGN_OUT = \"sign_out\";\r\nexport const CHANGE_USER_EMAIL = \"change_user_email\";\r\nexport const UPDATE_USER_PROFILE = \"update_user_profile\";\r\nexport const VERIFY_ACCOUNT = \"verify_account\";\r\n\r\n///////////////////Site///////////////////\r\nexport const SITE_LAYOUT = \"site_layout\";\r\n","import {\r\n  GET_ARTICLES,\r\n  ERROR_GLOBAL,\r\n  SUCCESS_GLOBAL,\r\n  CLEAR_NOTIFICATION,\r\n  REMOVE_ARTICLE,\r\n  NAV_SEARCH,\r\n  AUTH_USER,\r\n  SIGN_OUT,\r\n  SITE_LAYOUT,\r\n  GET_ARTICLE,\r\n  ADD_ARTICLE,\r\n  GET_ADMIN_ARTICLES,\r\n  UPDATE_ARTICLE_STATUS,\r\n  CLEAR_CURRENT_ARTICLE,\r\n  CHANGE_USER_EMAIL,\r\n  UPDATE_USER_PROFILE,\r\n  VERIFY_ACCOUNT,\r\n  GET_CATEGORIES,\r\n  ADD_CATEGORY,\r\n} from \"../types\";\r\n\r\n///////////////////// Articles /////////////////////\r\n\r\nexport const addArticle = (article) => ({\r\n  type: ADD_ARTICLE,\r\n  payload: article,\r\n});\r\n\r\nexport const getPaginateArticles = (articles) => ({\r\n  type: GET_ADMIN_ARTICLES,\r\n  payload: articles,\r\n});\r\n\r\nexport const getArticles = (articles) => ({\r\n  type: GET_ARTICLES,\r\n  payload: articles,\r\n});\r\n\r\nexport const getArticle = (article) => ({\r\n  type: GET_ARTICLE,\r\n  payload: article,\r\n});\r\n\r\nexport const updateArticleStatus = (articles) => ({\r\n  type: UPDATE_ARTICLE_STATUS,\r\n  payload: articles,\r\n});\r\n\r\nexport const clearCurrentArticle = () => ({\r\n  type: CLEAR_CURRENT_ARTICLE,\r\n});\r\n\r\nexport const getCategories = (categories) => ({\r\n  type: GET_CATEGORIES,\r\n  payload: categories,\r\n});\r\n\r\nexport const addCategory = (categories) => ({\r\n  type: ADD_CATEGORY,\r\n  payload: categories,\r\n});\r\n\r\nexport const navSearch = (articles) => ({\r\n  type: NAV_SEARCH,\r\n  payload: articles,\r\n});\r\n\r\n///////////////////// Notifications /////////////////////\r\n\r\nexport const errorGlobal = (msg) => ({\r\n  type: ERROR_GLOBAL,\r\n  payload: msg,\r\n});\r\n\r\nexport const successGlobal = (msg) => ({\r\n  type: SUCCESS_GLOBAL,\r\n  payload: msg,\r\n});\r\n\r\nexport const clearNotification = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_NOTIFICATION,\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeArticle = () => ({\r\n  type: REMOVE_ARTICLE,\r\n});\r\n\r\n///////////////////// Users /////////////////////\r\nexport const authUser = (user) => ({\r\n  type: AUTH_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const signOut = () => ({ type: SIGN_OUT });\r\n\r\nexport const changeUserEmail = (data) => ({\r\n  type: CHANGE_USER_EMAIL,\r\n  payload: data,\r\n});\r\n\r\nexport const updateUserProfile = (userData) => ({\r\n  type: UPDATE_USER_PROFILE,\r\n  payload: userData,\r\n});\r\n\r\nexport const accountVerify = () => ({\r\n  type: VERIFY_ACCOUNT,\r\n});\r\n\r\n////////////////// Site //////////////////\r\n\r\nexport const appLayout = (layout) => ({\r\n  type: SITE_LAYOUT,\r\n  payload: layout,\r\n});\r\n","import { toast } from \"react-toastify\";\r\nimport cookie from \"react-cookies\";\r\n\r\nexport const showToast = (type, msg) => {\r\n  switch (type) {\r\n    case \"SUCCESS\":\r\n      toast.success(msg, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n      break;\r\n    case \"ERROR\":\r\n      toast.error(msg, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n      break;\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport const getTokenCookie = () => cookie.load(\"x-access-token\");\r\nexport const removeTokenCookie = () =>\r\n  cookie.remove(\"x-access-token\", { path: \"/\" });\r\nexport const getAuthHeader = () => {\r\n  return {\r\n    headers: {\r\n      \"x-access-token\": getTokenCookie(),\r\n    },\r\n  };\r\n};\r\n","import * as articles from \"./index\";\r\nimport axios from \"axios\";\r\nimport { getAuthHeader } from \"../../utils/tools\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nlet count = 0;\r\n\r\nexport const getArticles = (sort) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const arts = await axios.post(`/api/articles/loadmore`, sort);\r\n      const prevArts = getState().articles.articles;\r\n\r\n      let newArts = [...arts.data];\r\n\r\n      if (prevArts) {\r\n        newArts = [...prevArts, ...arts.data];\r\n      }\r\n      let tempCount = newArts.length;\r\n      if (count !== tempCount) {\r\n        count = tempCount;\r\n      } else {\r\n        dispatch(articles.errorGlobal(\"No more articles to be loaded!\"));\r\n      }\r\n\r\n      dispatch(articles.getArticles(newArts));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(\"Oops error loading articles\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getArticle = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const request = await axios.get(`/api/articles/get_byid/${id}`);\r\n      dispatch(articles.getArticle(request.data[0]));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addArticle = (article) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const request = await axios.post(\r\n        `/api/articles/admin/add_articles`,\r\n        article,\r\n        getAuthHeader()\r\n      );\r\n\r\n      dispatch(articles.addArticle(request.data));\r\n      dispatch(articles.successGlobal(\"Article added!\"));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getPaginateArticles = (page = 1, limit = 5, keywords = \"\") => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const request = await axios.post(\r\n        `/api/articles/admin/paginate`,\r\n        {\r\n          keywords,\r\n          page,\r\n          limit,\r\n        },\r\n        getAuthHeader()\r\n      );\r\n\r\n      dispatch(articles.getPaginateArticles(request.data));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeStatusArticle = (status, _id) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const article = await axios.patch(\r\n        `/api/articles/admin/${_id}`,\r\n        {\r\n          status,\r\n        },\r\n        getAuthHeader()\r\n      );\r\n\r\n      let art = article.data;\r\n      let state = getState().articles.adminArticles.docs; ///Previous State\r\n      let position = state.findIndex((art) => art._id === _id);\r\n      state[position] = art;\r\n\r\n      dispatch(articles.updateArticleStatus(state));\r\n      dispatch(articles.successGlobal(\"Successfully updated status\"));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(\"Error updating status\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeArticle = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.delete(`/api/articles/admin/${id}`, getAuthHeader());\r\n\r\n      dispatch(articles.removeArticle());\r\n      dispatch(articles.successGlobal(\"Article deleted successfully\"));\r\n    } catch (error) {\r\n      dispatch(articles.successGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getAdminArticle = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const request = await axios.get(\r\n        `/api/articles/admin/${id}`,\r\n        getAuthHeader()\r\n      );\r\n\r\n      dispatch(articles.getArticle(request.data));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateArticle = (article, id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newArticle = await axios.patch(\r\n        `/api/articles/admin/${id}`,\r\n        article,\r\n        getAuthHeader()\r\n      );\r\n\r\n      dispatch(articles.getArticle(newArticle.data));\r\n      dispatch(articles.successGlobal(\"Article successfully updated!\"));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(\"Error updating article. Try again!\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getCategories = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const categories = await axios.get(`/api/articles/categories`);\r\n\r\n      dispatch(articles.getCategories(categories.data));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(\"Error fetching categories!\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addCategory = (values) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const category = await axios.post(\r\n        `/api/articles/categories`,\r\n        values,\r\n        getAuthHeader()\r\n      );\r\n\r\n      let newState = [...getState().articles.categories, category.data];\r\n\r\n      dispatch(articles.addCategory(newState));\r\n      dispatch(articles.successGlobal(\"Category added successfully!\"));\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(\"Error adding categories. Try again!\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getNavSearchResults = (page = 1, limit = 5, keywords = \"\") => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const request = await axios.post(`/api/articles/user/search`, {\r\n        keywords,\r\n        page,\r\n        limit,\r\n      });\r\n\r\n      dispatch(articles.navSearch(request.data));\r\n      if (request.data.totalDocs === 0) {\r\n        dispatch(articles.errorGlobal(\"Not found!\"));\r\n      } else {\r\n        dispatch(articles.successGlobal(\"Search results found!\"));\r\n      }\r\n    } catch (error) {\r\n      dispatch(articles.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport ArticleCard from \"../../utils/articleCard\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getArticles } from \"../../store/actions/article_actions\";\r\n\r\nconst initialSort = { sortBy: \"_id\", order: \"desc\", limit: 8, skip: 0 };\r\n\r\nconst Home = () => {\r\n  const [sort, setSort] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    initialSort\r\n  );\r\n  const articles = useSelector((state) => state.articles);\r\n  const notification = useSelector((state) => state.notification);\r\n  const [loadMore, setLoadMore] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (articles && !articles.articles) {\r\n      dispatch(getArticles(initialSort));\r\n    }\r\n  }, [dispatch, articles]);\r\n\r\n  useEffect(() => {\r\n    if (notification && notification.error) {\r\n      setLoadMore(false);\r\n    }\r\n  }, [notification]);\r\n\r\n  return (\r\n    <>\r\n      <Carousel className=\"carrousel_avatar mb-4\">\r\n        <div\r\n          style={{\r\n            backgroundImage: \"url('https://picsum.photos/1920/1080')\",\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\",\r\n          }}\r\n        ></div>\r\n      </Carousel>\r\n\r\n      <Grid container spacing={2} className=\"article_card\">\r\n        {articles && articles.articles\r\n          ? articles.articles.map((item, index) => {\r\n              return (\r\n                <Grid key={item._id} item xs={12} sm={6} lg={3}>\r\n                  <ArticleCard key={item._id + index} article={item} />\r\n                </Grid>\r\n              );\r\n            })\r\n          : null}\r\n      </Grid>\r\n      {loadMore ? (\r\n        <Button\r\n          className=\"mt-2\"\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            let skip = sort.skip + sort.limit;\r\n            dispatch(getArticles({ ...sort, skip: skip }));\r\n            setSort({ skip: skip });\r\n          }}\r\n        >\r\n          Load More\r\n        </Button>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getNavSearchResults } from \"../../store/actions/article_actions\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst NavSearch = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: { keywords: \"\" },\r\n    validationSchema: Yup.object({\r\n      keywords: Yup.string()\r\n        // .matches(/^[^\\s]+[aA-zZ1-9]*/, \"Remove trailing spaces\")\r\n        .required(\"Please enter something\")\r\n        .min(3, \"Min 3 characters\"),\r\n    }),\r\n    onSubmit: (value) => {\r\n      dispatch(getNavSearchResults(1, 5, value.keywords.trim()));\r\n      props.closeDrawer();\r\n      props.history.push(`/searchresults?keywords=${value.keywords.trim()}`);\r\n    },\r\n  });\r\n\r\n  const errorHelper = (formik, values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText:\r\n      formik.errors[values] && formik.touched[values]\r\n        ? formik.errors[values]\r\n        : null,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form style={{ margin: \"20px\" }} onSubmit={formik.handleSubmit}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          name=\"keywords\"\r\n          label=\"Search Movie\"\r\n          variant=\"outlined\"\r\n          {...formik.getFieldProps(\"keywords\")}\r\n          {...errorHelper(formik, \"keywords\")}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(NavSearch);\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport {\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\n\r\nimport DehazeIcon from \"@material-ui/icons/Dehaze\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport NavSearch from \"./search\";\r\n\r\nconst SideDrawer = ({ users, signOutUser }) => {\r\n  const [state, setState] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <DehazeIcon className=\"drawer_btn\" onClick={() => setState(true)} />\r\n      <Drawer anchor={\"right\"} open={state} onClose={() => setState(false)}>\r\n        <NavSearch closeDrawer={() => setState(false)} />\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            component={RouterLink}\r\n            to=\"/\"\r\n            onClick={() => setState(false)}\r\n          >\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Home\" />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            component={RouterLink}\r\n            to=\"/contact\"\r\n            onClick={() => setState(false)}\r\n          >\r\n            <ListItemIcon>\r\n              <MailIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Contact\" />\r\n          </ListItem>\r\n\r\n          {!users.auth ? (\r\n            <ListItem\r\n              button\r\n              component={RouterLink}\r\n              to=\"/auth\"\r\n              onClick={() => setState(false)}\r\n            >\r\n              <ListItemIcon>\r\n                <VpnKeyIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sign in\" />\r\n            </ListItem>\r\n          ) : (\r\n            <ListItem\r\n              button\r\n              onClick={() => {\r\n                signOutUser();\r\n                setState(false);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <VpnKeyIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sign out\" />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        {users.auth ? (\r\n          <>\r\n            <Divider />\r\n            <List>\r\n              <ListItem\r\n                button\r\n                component={RouterLink}\r\n                to=\"/dashboard\"\r\n                onClick={() => setState(false)}\r\n              >\r\n                <ListItemIcon>\r\n                  <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n            </List>{\" \"}\r\n          </>\r\n        ) : null}\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import * as users from \"./index\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getAuthHeader,\r\n  getTokenCookie,\r\n  removeTokenCookie,\r\n} from \"../../utils/tools\";\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nexport const registerUser = (values) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await axios.post(`/api/users/register`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n\r\n      dispatch(users.authUser({ data: user.data, auth: true }));\r\n      dispatch(users.successGlobal(\"Registration successful!\"));\r\n\r\n      //Signing user out till they verify\r\n\r\n      dispatch(users.signOut());\r\n      dispatch(users.successGlobal(\"Please verify your mail!\"));\r\n      dispatch(users.successGlobal(\"Please verify your mail!\"));\r\n    } catch (error) {\r\n      dispatch(users.signOut());\r\n      dispatch(users.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const signInUser = (values) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await axios.post(`/api/users/signin`, {\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n\r\n      //Check if user did verification else ask them to verify\r\n      if (user.data.verified === false) {\r\n        dispatch(users.successGlobal(\"Please verify your mail!\"));\r\n      } else {\r\n        dispatch(users.authUser({ data: user.data, auth: true }));\r\n        dispatch(users.successGlobal(\"Welcome to FlickBase!\"));\r\n      }\r\n    } catch (error) {\r\n      dispatch(users.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const isAuthUser = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      if (!getTokenCookie()) {\r\n        throw new Error();\r\n      }\r\n      const user = await axios(`/api/users/isauth`, getAuthHeader());\r\n      dispatch(users.authUser({ data: user.data, auth: true }));\r\n    } catch (error) {\r\n      dispatch(users.authUser({ data: {}, auth: false }));\r\n    }\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return async (dispatch) => {\r\n    removeTokenCookie();\r\n    dispatch(users.signOut());\r\n  };\r\n};\r\n\r\nexport const changeUserEmail = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.patch(\r\n        `/api/users/update_email`,\r\n        {\r\n          email: data.email,\r\n          newemail: data.newEmail,\r\n        },\r\n        getAuthHeader()\r\n      );\r\n\r\n      dispatch(users.changeUserEmail(data.newEmail));\r\n      dispatch(users.successGlobal(\"Email updated successfully!\"));\r\n    } catch (error) {\r\n      dispatch(users.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserProfile = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const profile = await axios.patch(\r\n        `/api/users/profile`,\r\n        data,\r\n        getAuthHeader()\r\n      );\r\n\r\n      const userData = {\r\n        ...getState().users.data,\r\n        ...profile.data,\r\n      };\r\n\r\n      dispatch(users.updateUserProfile(userData));\r\n      dispatch(users.successGlobal(\"Profile updated successfully!\"));\r\n    } catch (error) {\r\n      dispatch(users.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const contactMe = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/users/contact`, data);\r\n      dispatch(users.successGlobal(\"Message sent successfully!\"));\r\n    } catch (error) {\r\n      dispatch(users.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const accountVerify = (token) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const user = getState().users.auth;\r\n\r\n      await axios.get(`/api/users/verify?verification=${token}`);\r\n\r\n      if (user) {\r\n        dispatch(users.accountVerify());\r\n      }\r\n      dispatch(users.successGlobal(\"Account verified successfully!\"));\r\n      // Testing sign user out after verification\r\n      dispatch(users.signOut());\r\n      dispatch(users.successGlobal(\"Please login to continue!\"));\r\n      dispatch(users.successGlobal(\"Please login to continue!\"));\r\n    } catch (error) {\r\n      dispatch(users.errorGlobal(error.response.data.message));\r\n    }\r\n  };\r\n};\r\n","import * as site from \"./index\";\r\n\r\nexport const appLayout = (layout) => {\r\n  return (dispatch) => {\r\n    dispatch(site.appLayout(layout));\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport SideDrawer from \"./sideNavigation\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearNotification } from \"../../store/actions/index\";\r\nimport { showToast } from \"../../utils/tools\";\r\nimport { signOut } from \"../../store/actions/users_actions\";\r\nimport { appLayout } from \"../../store/actions/site_action\";\r\n\r\nconst Header = (props) => {\r\n  const [layout, setLayout] = useState(\"\");\r\n  const notification = useSelector((state) => state.notification);\r\n  const users = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const signOutUser = () => {\r\n    dispatch(signOut());\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    let pathArray = props.location.pathname.split(\"/\");\r\n    if (pathArray[1] === \"dashboard\") {\r\n      setLayout(\"dash_layout\");\r\n      dispatch(appLayout(\"dash_layout\"));\r\n    } else {\r\n      setLayout(\"\");\r\n      dispatch(appLayout(\"\"));\r\n    }\r\n  }, [props.location.pathname, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (notification && notification.error) {\r\n      const msg = notification.msg\r\n        ? notification.msg\r\n        : \"Sorry, something went wrong!\";\r\n      showToast(\"ERROR\", msg);\r\n      dispatch(clearNotification());\r\n    }\r\n\r\n    if (notification && notification.success) {\r\n      const msg = notification.msg ? notification.msg : \"Awesome\";\r\n      showToast(\"SUCCESS\", msg);\r\n      dispatch(clearNotification());\r\n    }\r\n  }, [notification, dispatch]);\r\n  return (\r\n    <>\r\n      <nav className={`navbar sticky-top ${layout}`}>\r\n        <Link\r\n          style={{ fontFamily: \"Fredoka One\" }}\r\n          to=\"/\"\r\n          className=\"navbar-brand d-flex align-items-center\"\r\n        >\r\n          FlickBase\r\n        </Link>\r\n        <SideDrawer users={users} signOutUser={signOutUser} />\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MainLayout = (props) => {\r\n  const site = useSelector((state) => state.site);\r\n  return (\r\n    <Container className={`app_container mb-5 ${site.layout}`}>\r\n      {props.children}\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction PreventAuthRoute(props) {\r\n  const users = useSelector((state) => state.users);\r\n  return <>{users.auth ? <Redirect to=\"/dashboard\" /> : props.children}</>;\r\n}\r\n\r\nexport default PreventAuthRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerUser, signInUser } from \"../../store/actions/users_actions\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport PreventAuthRoute from \"../../hoc/preventAuthRoute\";\r\n\r\nconst Auth = (props) => {\r\n  const [register, setRegister] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const notification = useSelector((state) => state.notification);\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: { email: \"\", password: \"\" },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required(\"Sorry email is required!\")\r\n        .email(\"This is not a valid email\"),\r\n      password: Yup.string().required(\"Sorry password is required!\"),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      handleSubmit(values);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (values) => {\r\n    if (register) {\r\n      setDisable(true);\r\n      dispatch(registerUser(values));\r\n    } else {\r\n      dispatch(signInUser(values));\r\n    }\r\n  };\r\n\r\n  const errorHelper = (formik, values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText:\r\n      formik.errors[values] && formik.touched[values]\r\n        ? formik.errors[values]\r\n        : null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (notification && notification.success) {\r\n      props.history.push(\"/dashboard\");\r\n    }\r\n    if (notification && notification.error) {\r\n      setDisable(false);\r\n    }\r\n  }, [notification, props.history]);\r\n\r\n  return (\r\n    <PreventAuthRoute>\r\n      <div className=\"auth_container\">\r\n        <h1>Authenticate</h1>\r\n        <form className=\"mt-3\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"email\"\r\n              label=\"Enter your email\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"email\")}\r\n              {...errorHelper(formik, \"email\")}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"password\"\r\n              label=\"Enter your password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"password\")}\r\n              {...errorHelper(formik, \"password\")}\r\n            />\r\n          </div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            disabled={disable}\r\n          >\r\n            {register ? \"Register\" : \"Login\"}\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            className=\"mt-1\"\r\n            onClick={() => setRegister(!register)}\r\n          >\r\n            Want to {!register ? \"register?\" : \"login?\"}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </PreventAuthRoute>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"root_loader\">\r\n    <CircularProgress />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nconst AdminLayout = (props) => {\r\n  const users = useSelector((state) => state.users);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row adminLayout\">\r\n        <nav className=\"col-md-2 d-none d-md-block sidebar\">\r\n          <div>\r\n            <List>\r\n              <ListItem button component={RouterLink} to=\"/dashboard\">\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem button component={RouterLink} to=\"/dashboard/profile\">\r\n                <ListItemText primary=\"Profile\" />\r\n              </ListItem>\r\n\r\n              {users.data.role === \"admin\" ? (\r\n                <>\r\n                  <ListItem\r\n                    button\r\n                    component={RouterLink}\r\n                    to=\"/dashboard/articles\"\r\n                  >\r\n                    <ListItemText primary=\"Articles\" />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    button\r\n                    component={RouterLink}\r\n                    to=\"/dashboard/categories\"\r\n                  >\r\n                    <ListItemText primary=\"Categories\" />\r\n                  </ListItem>\r\n                </>\r\n              ) : null}\r\n            </List>\r\n          </div>\r\n        </nav>\r\n        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n          <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n            <h1 className=\"h2\">{props.section}</h1>\r\n          </div>\r\n          {props.children}\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AdminLayout from \"../../hoc/adminLayout\";\r\n\r\nconst Dashboard = () => {\r\n  const user = useSelector((state) => state.users);\r\n  const stripMail = () => {\r\n    let temp;\r\n    if (user && user.data.email) {\r\n      temp = user.data.email.split(\"@\");\r\n      return temp[0];\r\n    } else {\r\n      return \"<please completely your profile>\";\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <AdminLayout section={\"Dashboard\"}>\r\n        <h4 className=\"mt-4\" style={{ textAlign: \"center\" }}>\r\n          Welcome back, {\"  \"}\r\n          <b>\r\n            <u>\r\n              {user && user.data.firstname ? user.data.firstname : stripMail()}\r\n            </u>{\" \"}\r\n          </b>\r\n        </h4>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeUserEmail } from \"../../../../store/actions/users_actions\";\r\n\r\nimport { TextField, Button, Stepper, Step, StepLabel } from \"@material-ui/core\";\r\n\r\nconst EmailStepper = ({ user }) => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const steps = [\"Enter old email\", \"Enter new email\", \"Are you sure?\"];\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: { email: \"\", newEmail: \"\" },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required(\"Please enter your old email\")\r\n        .email(\"This is not a valid email!\")\r\n        .test(\"oldMatch\", \"Please check your email\", (email) => {\r\n          return email === user.data.email;\r\n        }),\r\n      newEmail: Yup.string()\r\n        .required(\"Please enter your new email\")\r\n        .email(\"This is not a valid email!\")\r\n        .test(\"newMatch\", \"Please enter a different email\", (newEmail) => {\r\n          return newEmail !== user.data.email;\r\n        }),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(changeUserEmail(values));\r\n    },\r\n  });\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const nextBtn = () => (\r\n    <Button\r\n      className=\"mt-3\"\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={handleNext}\r\n    >\r\n      Next\r\n    </Button>\r\n  );\r\n\r\n  const backBtn = () => (\r\n    <Button\r\n      className=\"mt-3 mr-2\"\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      onClick={handleBack}\r\n    >\r\n      Back\r\n    </Button>\r\n  );\r\n\r\n  const errorHelper = (formik, values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText:\r\n      formik.errors[values] && formik.touched[values]\r\n        ? formik.errors[values]\r\n        : null,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label) => {\r\n          return (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <form className=\"mt-3 stepper_form\" onSubmit={formik.handleSubmit}>\r\n        {activeStep === 0 ? (\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"email\"\r\n              label=\"Enter your old email\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"email\")}\r\n              {...errorHelper(formik, \"email\")}\r\n            />\r\n            {formik.values.email && !formik.errors.email ? nextBtn() : null}\r\n          </div>\r\n        ) : null}\r\n        {activeStep === 1 ? (\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"newEmail\"\r\n              label=\"Enter your new email\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"newEmail\")}\r\n              {...errorHelper(formik, \"newEmail\")}\r\n            />\r\n\r\n            {backBtn()}\r\n            {formik.values.newEmail && !formik.errors.newEmail\r\n              ? nextBtn()\r\n              : null}\r\n          </div>\r\n        ) : null}\r\n        {activeStep === 2 ? (\r\n          <div className=\"form-group\">\r\n            {backBtn()}\r\n            <Button\r\n              className=\"mt-3\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={formik.submitForm}\r\n            >\r\n              Yes, change my email!\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailStepper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Grid, TextField, Divider } from \"@material-ui/core\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EmailStepper from \"./stepper/mail\";\r\n\r\nconst AuthProfile = () => {\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const users = useSelector((state) => state.users);\r\n  const notification = useSelector((state) => state.notification);\r\n\r\n  const closeModal = () => setEmailModal(false);\r\n  const openModal = () => setEmailModal(true);\r\n\r\n  useEffect(() => {\r\n    if (notification && notification.success) {\r\n      closeModal();\r\n    }\r\n  }, [notification]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3 auth_grid\">\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <TextField value={users.data.email} disabled />\r\n          </Grid>\r\n          <Grid item>\r\n            <EditIcon color=\"primary\" onClick={openModal} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <TextField value=\"************\" disabled />\r\n          </Grid>\r\n          <Grid item>\r\n            <EditIcon color=\"primary\" />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Divider />\r\n      <Modal size=\"lg\" centered show={emailModal} onHide={closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update your email</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <EmailStepper user={users} />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthProfile;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { updateUserProfile } from \"../../../store/actions/users_actions\";\r\n\r\nconst UserProfile = () => {\r\n  const { firstname, lastname, age } = useSelector((state) => state.users.data);\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: { firstname, lastname, age },\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(updateUserProfile(values));\r\n    },\r\n  });\r\n\r\n  const errorHelper = (formik, values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText:\r\n      formik.errors[values] && formik.touched[values]\r\n        ? formik.errors[values]\r\n        : null,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"mt-3 article_form\"\r\n        style={{ maxWidth: \"250px\" }}\r\n        onSubmit={formik.handleSubmit}\r\n      >\r\n        <div className=\"form-group\">\r\n          <TextField\r\n            style={{ width: \"100%\" }}\r\n            name=\"firstname\"\r\n            label=\"Enter your firstname\"\r\n            variant=\"outlined\"\r\n            {...formik.getFieldProps(\"firstname\")}\r\n            {...errorHelper(formik, \"firstname\")}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <TextField\r\n            style={{ width: \"100%\" }}\r\n            name=\"lastname\"\r\n            label=\"Enter your lastname\"\r\n            variant=\"outlined\"\r\n            {...formik.getFieldProps(\"lastname\")}\r\n            {...errorHelper(formik, \"lastname\")}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <TextField\r\n            style={{ width: \"100%\" }}\r\n            name=\"age\"\r\n            label=\"Enter your age\"\r\n            variant=\"outlined\"\r\n            {...formik.getFieldProps(\"age\")}\r\n            {...errorHelper(formik, \"age\")}\r\n          />\r\n        </div>\r\n        <Button\r\n          className=\"mb-3\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={formik.submitForm}\r\n        >\r\n          Update Profile\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport AdminLayout from \"../../../hoc/adminLayout\";\r\nimport AuthProfile from \"./auth\";\r\nimport UserProfile from \"./profile\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <>\r\n      <AdminLayout section=\"Profile\">\r\n        <AuthProfile />\r\n        <UserProfile />\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport Moment from \"react-moment\";\r\nimport Loader from \"../../../utils/loader\";\r\n\r\nconst PaginationComponent = ({\r\n  arts,\r\n  prev,\r\n  next,\r\n  handleShow,\r\n  handleStatusChange,\r\n  editArtsAction,\r\n}) => {\r\n  const goToPrevPage = (page) => {\r\n    prev(page);\r\n  };\r\n\r\n  const goToNextPage = (page) => {\r\n    next(page);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {arts && arts.docs ? (\r\n        <>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Created</th>\r\n                <th>Title</th>\r\n                <th>Score</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {arts.docs.map((item) => (\r\n                <tr key={item._id}>\r\n                  <td>\r\n                    <Moment to={item.date}></Moment>\r\n                  </td>\r\n                  <td>{item.title}</td>\r\n                  <td>{item.score}</td>\r\n                  <td\r\n                    className=\"action_btn remove_btn\"\r\n                    onClick={() => handleShow(item._id)}\r\n                  >\r\n                    Remove\r\n                  </td>\r\n                  <td\r\n                    className=\"action_btn edit_btn\"\r\n                    onClick={() => editArtsAction(item._id)}\r\n                  >\r\n                    Edit\r\n                  </td>\r\n                  <td\r\n                    className=\"action_btn status_btn\"\r\n                    onClick={() => handleStatusChange(item.status, item._id)}\r\n                  >\r\n                    {item.status}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Pagination>\r\n            {arts.hasPrevPage ? (\r\n              <>\r\n                <Pagination.Prev onClick={() => goToPrevPage(arts.prevPage)} />\r\n                <Pagination.Item onClick={() => goToPrevPage(arts.prevPage)}>\r\n                  {arts.prevPage}\r\n                </Pagination.Item>\r\n              </>\r\n            ) : null}\r\n\r\n            <Pagination.Item active>{arts.page}</Pagination.Item>\r\n            {arts.hasNextPage ? (\r\n              <>\r\n                <Pagination.Item onClick={() => goToNextPage(arts.nextPage)}>\r\n                  {arts.nextPage}\r\n                </Pagination.Item>\r\n                <Pagination.Next onClick={() => goToNextPage(arts.nextPage)} />\r\n              </>\r\n            ) : null}\r\n          </Pagination>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginationComponent;\r\n","import React, { useEffect, useState, useReducer } from \"react\";\r\nimport AdminLayout from \"../../../hoc/adminLayout\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  changeStatusArticle,\r\n  getPaginateArticles,\r\n  removeArticle,\r\n} from \"../../../store/actions/article_actions\";\r\nimport PaginationComponent from \"./paginate\";\r\n\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport {\r\n  Modal,\r\n  Button,\r\n  ButtonToolbar,\r\n  ButtonGroup,\r\n  InputGroup,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../../../utils/loader\";\r\n\r\nconst Articles = (props) => {\r\n  const dispatch = useDispatch();\r\n  const articles = useSelector((state) => state.articles);\r\n  const notification = useSelector((state) => state.notification);\r\n  const [removeAlert, setRemoveAlert] = useState(false);\r\n  const [resetIcon, setResetIcon] = useState(false);\r\n  const [loadIcon, setloadIcon] = useState(\"none\");\r\n  const [toRemove, setToRemove] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchValues, setSearchValues] = useReducer(\r\n    (state, newState) => ({ ...state, ...newState }),\r\n    { value: \"\", memory: \"\" }\r\n  );\r\n\r\n  let limit = 5;\r\n  let arts = articles.adminArticles;\r\n\r\n  const editArtsAction = (id) => {\r\n    props.history.push(`/dashboard/articles/edit/${id}`);\r\n  };\r\n\r\n  const handleClose = () => setRemoveAlert(false);\r\n\r\n  const handleShow = (id = null) => {\r\n    setToRemove(id);\r\n    setRemoveAlert(true);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(removeArticle(toRemove));\r\n  };\r\n\r\n  const goToPrevPage = (page) => {\r\n    dispatch(getPaginateArticles(page, limit, searchValues.memory.trim()));\r\n  };\r\n\r\n  const goToNextPage = (page) => {\r\n    dispatch(getPaginateArticles(page, limit, searchValues.memory.trim()));\r\n  };\r\n\r\n  const handleStatusChange = (status, _id) => {\r\n    let newStatus = status === \"draft\" ? \"public\" : \"draft\";\r\n    dispatch(changeStatusArticle(newStatus, _id));\r\n  };\r\n\r\n  const triggerSearch = (e) => {\r\n    e.preventDefault();\r\n    if (searchValues.value !== \"\") {\r\n      setloadIcon(\"block\");\r\n      setSearchValues({ memory: searchValues.value });\r\n    }\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setSearchValues({ value: \"\", memory: \"\" });\r\n    dispatch(getPaginateArticles());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [articles]);\r\n\r\n  ///////New Search///////\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    dispatch(getPaginateArticles(1, limit, searchValues.memory.trim()));\r\n  }, [dispatch, searchValues.memory, limit]);\r\n\r\n  useEffect(() => {\r\n    handleClose();\r\n    if (notification && notification.removeArticle) {\r\n      dispatch(\r\n        getPaginateArticles(arts.page, limit, searchValues.memory.trim())\r\n      );\r\n    }\r\n  }, [dispatch, notification, arts, limit, searchValues.memory]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPaginateArticles());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout section=\"Articles\">\r\n        <div className=\"articles_table\">\r\n          <ButtonToolbar className=\"mb-3\">\r\n            <ButtonGroup className=\"mr-2\">\r\n              <LinkContainer to=\"/dashboard/articles/add\">\r\n                <Button variant=\"info\">Add Article</Button>\r\n              </LinkContainer>\r\n            </ButtonGroup>\r\n\r\n            <form onSubmit={triggerSearch}>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"btnGroupAddon2\">Search</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Example\"\r\n                  value={searchValues.value}\r\n                  onChange={(e) => setSearchValues({ value: e.target.value })}\r\n                />\r\n              </InputGroup>\r\n            </form>\r\n            {resetIcon ? (\r\n              <CircularProgress\r\n                className=\"ml-2 mt-1\"\r\n                size=\"30px\"\r\n                color=\"secondary\"\r\n              />\r\n            ) : (\r\n              <Box display={loadIcon}>\r\n                <CachedIcon\r\n                  className=\"ml-2 mt-1\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"30px\",\r\n                  }}\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    setResetIcon(true);\r\n                    resetSearch();\r\n                    setTimeout(() => {\r\n                      setloadIcon(\"none\");\r\n                      setResetIcon(false);\r\n                    }, 500);\r\n                  }}\r\n                />\r\n              </Box>\r\n            )}\r\n          </ButtonToolbar>\r\n\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              <div>\r\n                {searchValues.memory !== \"\" ? (\r\n                  <p>\r\n                    Your search for <b>\"{searchValues.memory.trim()}\"</b> had{\" \"}\r\n                    <b>{articles.adminArticles.totalDocs}</b>{\" \"}\r\n                    {articles.adminArticles.totalDocs > 1\r\n                      ? \"results.\"\r\n                      : \"result.\"}\r\n                  </p>\r\n                ) : null}\r\n              </div>\r\n              <PaginationComponent\r\n                arts={arts}\r\n                prev={(page) => goToPrevPage(page)}\r\n                next={(page) => goToNextPage(page)}\r\n                handleShow={(id) => handleShow(id)}\r\n                handleStatusChange={(status, _id) =>\r\n                  handleStatusChange(status, _id)\r\n                }\r\n                editArtsAction={(id) => editArtsAction(id)}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <Modal show={removeAlert} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Are you really sure?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>This action cannot be undone</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close this\r\n              </Button>\r\n              <Button variant=\"danger\" onClick={() => handleDelete()}>\r\n                Delete\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function authGuard(ComposedComponent, roleCheck = false) {\r\n  const AuthenticationCheck = (props) => {\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    const users = useSelector((state) => state.users);\r\n\r\n    useEffect(() => {\r\n      if (!users.auth) {\r\n        props.history.push(\"/\");\r\n      } else {\r\n        if (roleCheck && users.data.role === \"user\") {\r\n          props.history.push(\"/dashboard\");\r\n        } else {\r\n          setIsAuth(true);\r\n        }\r\n      }\r\n    }, [props, users]);\r\n\r\n    if (!isAuth) {\r\n      return <div className=\"main_loader\">Loading...</div>;\r\n    } else {\r\n      return <ComposedComponent {...props} />;\r\n    }\r\n  };\r\n  return AuthenticationCheck;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Divider,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\n\r\nimport MovieIcon from \"@material-ui/icons/Movie\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nconst ScoreCard = ({ current }) => {\r\n  console.log(current);\r\n  return (\r\n    <List className=\"scorecard\">\r\n      {/* Score */}\r\n      <ListItem>\r\n        <ListItemAvatar className=\"mt-2\">\r\n          <Avatar className=\"mt-2\">\r\n            <StarIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Our Score\"\r\n          secondary={current.score}\r\n          className=\"rating\"\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n\r\n      {current.category && current.category.name ? (\r\n        <div>\r\n          {/* Categories */}\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <ListIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary=\"Category\"\r\n              secondary={current.category.name}\r\n              className=\"category\"\r\n            />\r\n          </ListItem>\r\n          <Divider variant=\"inset\" component=\"li\" />\r\n        </div>\r\n      ) : null}\r\n\r\n      {/* Actor */}\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <PersonIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <div>\r\n          {current.actors.map((item, index) => (\r\n            <Chip\r\n              key={`${index + item}`}\r\n              item={item}\r\n              label={item}\r\n              clickable\r\n              color=\"primary\"\r\n              className=\"chip\"\r\n            />\r\n          ))}\r\n        </div>\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n\r\n      {/* Director */}\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <MovieIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary=\"Director\"\r\n          secondary={current.director}\r\n          className=\"director\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ScoreCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearCurrentArticle } from \"../../../store/actions/index\";\r\nimport { getArticle } from \"../../../store/actions/article_actions\";\r\nimport Loader from \"../../../utils/loader\";\r\nimport ScoreCard from \"../../../utils/scoreCard\";\r\nconst Article = (props) => {\r\n  const { current } = useSelector((state) => state.articles);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    /// props.match.params.id\r\n    dispatch(getArticle(props.match.params.id));\r\n  }, [dispatch, props.match.params]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearCurrentArticle());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {current ? (\r\n        <div className=\"article_container\">\r\n          <div\r\n            style={{\r\n              background: `url(https://picsum.photos/1920/1080)`,\r\n            }}\r\n            className=\"image\"\r\n          ></div>\r\n          <h1>{current.title}</h1>\r\n          <div className=\"mt-3 content\">\r\n            <div dangerouslySetInnerHTML={{ __html: current.content }}></div>\r\n          </div>\r\n          <ScoreCard current={current} />\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const formValues = {\r\n  title: \"\",\r\n  content: \"\",\r\n  excerpt: \"\",\r\n  score: \"\",\r\n  director: \"\",\r\n  actors: [],\r\n  status: \"draft\",\r\n  category: \"\",\r\n};\r\n\r\nexport const validation = () => {\r\n  return Yup.object({\r\n    title: Yup.string()\r\n      .required(\"Sorry, the title is required\")\r\n      .max(30, \"Sorry, the character limit exceeded\"),\r\n    content: Yup.string()\r\n      .required(\"Sorry, the content is required\")\r\n      .min(50, \"That's it...? Write some more\"),\r\n    excerpt: Yup.string()\r\n      .required(\"Sorry, the excerpt is required\")\r\n      .max(231, \"Sorry, the character limit exceeded\"),\r\n    score: Yup.number()\r\n      .required(\"Sorry, the score is required\")\r\n      .min(0, \"Sorry, 0 is the minimum\")\r\n      .max(100, \"Sorry, 100 is the maximum\"),\r\n    director: Yup.string().required(\"Please enter the director\"),\r\n    actors: Yup.array()\r\n      .required(\"Please enter the actors\")\r\n      .min(2, \"Minimum 2 actors required\"),\r\n    status: Yup.string().required(\"Sorry, the status is required\"),\r\n    category: Yup.string().required(\"Sorry, the category is required\"),\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { EditorState, ContentState } from \"draft-js\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\n///edit\r\nimport htmlToDraft from \"html-to-draftjs\";\r\n\r\nconst WYSIWYG = (props) => {\r\n  const [editorData, setEditorData] = useState({\r\n    editorState: EditorState.createEmpty(),\r\n  });\r\n\r\n  const onEditorStateChange = (editorData) => {\r\n    let HTMLDATA = stateToHTML(editorData.getCurrentContent());\r\n\r\n    setEditorData({\r\n      editorState: editorData,\r\n    });\r\n\r\n    props.setEditorState(HTMLDATA);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.editContent) {\r\n      const blockFromHtml = htmlToDraft(props.editContent);\r\n      const { contentBlocks, entityMap } = blockFromHtml;\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlocks,\r\n        entityMap\r\n      );\r\n\r\n      setEditorData({\r\n        editorState: EditorState.createWithContent(contentState),\r\n      });\r\n    }\r\n  }, [props.editContent]);\r\n\r\n  return (\r\n    <div>\r\n      <Editor\r\n        editorState={editorData.editorState}\r\n        onEditorStateChange={onEditorStateChange}\r\n        wrapperClassName=\"demo-wrapper\"\r\n        editorClassName=\"demo-editor\"\r\n        onBlur={props.setEditorBlur}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WYSIWYG;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport AdminLayout from \"../../../hoc/adminLayout\";\r\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { validation, formValues } from \"./validationSchema\";\r\nimport WYSIWYG from \"../../../utils/forms/wysiwyg\";\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Divider,\r\n  Chip,\r\n  Paper,\r\n  InputBase,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  addArticle,\r\n  getCategories,\r\n} from \"../../../store/actions/article_actions\";\r\nimport Loader from \"../../../utils/loader\";\r\n\r\nconst AddArticle = (props) => {\r\n  const [editorBlur, setEditorBlur] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const actorsValue = useRef(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { categories } = useSelector((state) => state.articles);\r\n  const notification = useSelector((state) => state.notification);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: formValues,\r\n    validationSchema: validation,\r\n    onSubmit: (values, { resetForm }) => {\r\n      setIsSubmitting(true);\r\n      dispatch(addArticle(values));\r\n    },\r\n  });\r\n\r\n  const handleEditorState = (state) => {\r\n    formik.setFieldValue(\"content\", state, true);\r\n  };\r\n\r\n  const handleEditorBlur = (blur) => {\r\n    setEditorBlur(true);\r\n  };\r\n\r\n  const errorHelper = (formik, values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText:\r\n      formik.errors[values] && formik.touched[values]\r\n        ? formik.errors[values]\r\n        : null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (notification && notification.success) {\r\n      props.history.push(\"/dashboard/articles\");\r\n    }\r\n    if (notification && notification.error) {\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [notification, props.history]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <AdminLayout section=\"Add article\">\r\n      {isSubmitting ? (\r\n        <Loader />\r\n      ) : (\r\n        <form className=\"mt-3 article_form\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"title\"\r\n              label=\"Enter a title\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"title\")}\r\n              {...errorHelper(formik, \"title\")}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"excerpt\"\r\n              label=\"Enter an excerpt\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"excerpt\")}\r\n              {...errorHelper(formik, \"excerpt\")}\r\n              multiline\r\n              rows={4}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <WYSIWYG\r\n              setEditorState={(state) => handleEditorState(state)}\r\n              setEditorBlur={(blur) => handleEditorBlur(blur)}\r\n            />\r\n\r\n            {formik.errors.content && editorBlur ? (\r\n              <FormHelperText error={true}>\r\n                {formik.errors.content}\r\n              </FormHelperText>\r\n            ) : null}\r\n\r\n            <TextField\r\n              type=\"hidden\"\r\n              name=\"content\"\r\n              {...formik.getFieldProps(\"content\")}\r\n            />\r\n          </div>\r\n\r\n          <Divider className=\"mt-3 mb-3\" />\r\n          <h5>Movie data and score</h5>\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"score\"\r\n              label=\"Enter the score\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"score\")}\r\n              {...errorHelper(formik, \"score\")}\r\n            />\r\n          </div>\r\n\r\n          <FormikProvider value={formik}>\r\n            <h5>Add the actors:</h5>\r\n            <FieldArray\r\n              name=\"actors\"\r\n              render={(arrayhelpers) => (\r\n                <div>\r\n                  <Paper className=\"actors_form\">\r\n                    <InputBase\r\n                      inputRef={actorsValue}\r\n                      className=\"input\"\r\n                      placeholder=\"Add actor name here\"\r\n                    />\r\n\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        arrayhelpers.push(actorsValue.current.value);\r\n                        actorsValue.current.value = \"\";\r\n                      }}\r\n                    >\r\n                      <AddIcon />\r\n                    </IconButton>\r\n                  </Paper>\r\n                  {formik.errors.actors && formik.touched.actors ? (\r\n                    <FormHelperText error={true}>\r\n                      {formik.errors.actors}\r\n                    </FormHelperText>\r\n                  ) : null}\r\n                  <div className=\"chip_container\">\r\n                    {formik.values.actors.map((actor, index) => (\r\n                      <div key={actor}>\r\n                        <Chip\r\n                          label={`${actor}`}\r\n                          color=\"primary\"\r\n                          onDelete={() => {\r\n                            arrayhelpers.remove(index);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n          </FormikProvider>\r\n\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"director\"\r\n              label=\"Enter the director\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"director\")}\r\n              {...errorHelper(formik, \"director\")}\r\n            />\r\n          </div>\r\n\r\n          <FormControl variant=\"outlined\">\r\n            <h5>Select a category</h5>\r\n            <Select\r\n              name=\"category\"\r\n              {...formik.getFieldProps(\"category\")}\r\n              error={\r\n                formik.errors.category && formik.touched.category ? true : false\r\n              }\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n\r\n              {categories\r\n                ? categories.map((item) => (\r\n                    <MenuItem key={item._id} value={item._id}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n            {formik.errors.category && formik.touched.category ? (\r\n              <FormHelperText error={true}>\r\n                {formik.errors.category}\r\n              </FormHelperText>\r\n            ) : null}\r\n          </FormControl>\r\n\r\n          <Divider className=\"mt-3 mb-3\" />\r\n\r\n          <FormControl variant=\"outlined\">\r\n            <h5>Select a status</h5>\r\n            <Select\r\n              name=\"status\"\r\n              {...formik.getFieldProps(\"status\")}\r\n              error={\r\n                formik.errors.status && formik.touched.status ? true : false\r\n              }\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"draft\">Draft</MenuItem>\r\n              <MenuItem value=\"public\">Public</MenuItem>\r\n            </Select>\r\n            {formik.errors.status && formik.touched.status ? (\r\n              <FormHelperText error={true}>\r\n                {formik.errors.status}\r\n              </FormHelperText>\r\n            ) : null}\r\n          </FormControl>\r\n\r\n          <Divider className=\"mt-3 mb-3\" />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={false}\r\n          >\r\n            Add Article\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default AddArticle;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport AdminLayout from \"../../../hoc/adminLayout\";\r\nimport { useFormik, FieldArray, FormikProvider } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { validation, formValues } from \"./validationSchema\";\r\nimport WYSIWYG from \"../../../utils/forms/wysiwyg\";\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Divider,\r\n  Chip,\r\n  Paper,\r\n  InputBase,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport {\r\n  getAdminArticle,\r\n  updateArticle,\r\n  getCategories,\r\n} from \"../../../store/actions/article_actions\";\r\nimport Loader from \"../../../utils/loader\";\r\nimport { clearCurrentArticle } from \"../../../store/actions/index\";\r\n\r\nconst EditArticle = (props) => {\r\n  const [editorBlur, setEditorBlur] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [formData, setFormData] = useState(formValues);\r\n  const actorsValue = useRef(\"\");\r\n\r\n  const [editContent, setEditContent] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const articles = useSelector((state) => state.articles);\r\n  const notification = useSelector((state) => state.notification);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: formData,\r\n    validationSchema: validation,\r\n    onSubmit: (values, { resetForm }) => {\r\n      setIsSubmitting(true);\r\n      dispatch(updateArticle(values, props.match.params.id));\r\n    },\r\n  });\r\n\r\n  const handleEditorState = (state) => {\r\n    formik.setFieldValue(\"content\", state, true);\r\n  };\r\n\r\n  const handleEditorBlur = (blur) => {\r\n    setEditorBlur(true);\r\n  };\r\n\r\n  const errorHelper = (formik, values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText:\r\n      formik.errors[values] && formik.touched[values]\r\n        ? formik.errors[values]\r\n        : null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsSubmitting(false);\r\n  }, [notification, props.history]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n    dispatch(getAdminArticle(props.match.params.id));\r\n  }, [dispatch, props.match.params]);\r\n\r\n  useEffect(() => {\r\n    if (articles && articles.current) {\r\n      setFormData(articles.current);\r\n      setEditContent(articles.current.content);\r\n    }\r\n  }, [articles]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearCurrentArticle);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <AdminLayout section=\"Add article\">\r\n      {isSubmitting ? (\r\n        <Loader />\r\n      ) : (\r\n        <form className=\"mt-3 article_form\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"title\"\r\n              label=\"Enter a title\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"title\")}\r\n              {...errorHelper(formik, \"title\")}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"excerpt\"\r\n              label=\"Enter an excerpt\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"excerpt\")}\r\n              {...errorHelper(formik, \"excerpt\")}\r\n              multiline\r\n              rows={4}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <WYSIWYG\r\n              setEditorState={(state) => handleEditorState(state)}\r\n              setEditorBlur={(blur) => handleEditorBlur(blur)}\r\n              editContent={editContent}\r\n            />\r\n\r\n            {formik.errors.content && editorBlur ? (\r\n              <FormHelperText error={true}>\r\n                {formik.errors.content}\r\n              </FormHelperText>\r\n            ) : null}\r\n\r\n            <TextField\r\n              type=\"hidden\"\r\n              name=\"content\"\r\n              {...formik.getFieldProps(\"content\")}\r\n            />\r\n          </div>\r\n\r\n          <Divider className=\"mt-3 mb-3\" />\r\n          <h5>Movie data and score</h5>\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"score\"\r\n              label=\"Enter the score\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"score\")}\r\n              {...errorHelper(formik, \"score\")}\r\n            />\r\n          </div>\r\n\r\n          <FormikProvider value={formik}>\r\n            <h5>Add the actors:</h5>\r\n            <FieldArray\r\n              name=\"actors\"\r\n              render={(arrayhelpers) => (\r\n                <div>\r\n                  <Paper className=\"actors_form\">\r\n                    <InputBase\r\n                      inputRef={actorsValue}\r\n                      className=\"input\"\r\n                      placeholder=\"Add actor name here\"\r\n                    />\r\n\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        arrayhelpers.push(actorsValue.current.value);\r\n                        actorsValue.current.value = \"\";\r\n                      }}\r\n                    >\r\n                      <AddIcon />\r\n                    </IconButton>\r\n                  </Paper>\r\n                  {formik.errors.actors && formik.touched.actors ? (\r\n                    <FormHelperText error={true}>\r\n                      {formik.errors.actors}\r\n                    </FormHelperText>\r\n                  ) : null}\r\n                  <div className=\"chip_container\">\r\n                    {formik.values.actors.map((actor, index) => (\r\n                      <div key={actor}>\r\n                        <Chip\r\n                          label={`${actor}`}\r\n                          color=\"primary\"\r\n                          onDelete={() => {\r\n                            arrayhelpers.remove(index);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n          </FormikProvider>\r\n\r\n          <div className=\"form-group\">\r\n            <TextField\r\n              style={{ width: \"100%\" }}\r\n              name=\"director\"\r\n              label=\"Enter the director\"\r\n              variant=\"outlined\"\r\n              {...formik.getFieldProps(\"director\")}\r\n              {...errorHelper(formik, \"director\")}\r\n            />\r\n          </div>\r\n\r\n          <FormControl variant=\"outlined\">\r\n            <h5>Select a category</h5>\r\n            <Select\r\n              name=\"category\"\r\n              {...formik.getFieldProps(\"category\")}\r\n              error={\r\n                formik.errors.category && formik.touched.category ? true : false\r\n              }\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n\r\n              {articles.categories\r\n                ? articles.categories.map((item) => (\r\n                    <MenuItem key={item._id} value={item._id}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n            {formik.errors.category && formik.touched.category ? (\r\n              <FormHelperText error={true}>\r\n                {formik.errors.category}\r\n              </FormHelperText>\r\n            ) : null}\r\n          </FormControl>\r\n\r\n          <Divider className=\"mt-3 mb-3\" />\r\n\r\n          <FormControl variant=\"outlined\">\r\n            <h5>Select a status</h5>\r\n            <Select\r\n              name=\"status\"\r\n              {...formik.getFieldProps(\"status\")}\r\n              error={\r\n                formik.errors.status && formik.touched.status ? true : false\r\n              }\r\n            >\r\n              <MenuItem value=\"\">None</MenuItem>\r\n              <MenuItem value=\"draft\">Draft</MenuItem>\r\n              <MenuItem value=\"public\">Public</MenuItem>\r\n            </Select>\r\n            {formik.errors.status && formik.touched.status ? (\r\n              <FormHelperText error={true}>\r\n                {formik.errors.status}\r\n              </FormHelperText>\r\n            ) : null}\r\n          </FormControl>\r\n\r\n          <Divider className=\"mt-3 mb-3\" />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={false}\r\n          >\r\n            Edit Article\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default EditArticle;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport Loader from \"../../utils/loader\";\r\nimport { contactMe } from \"../../store/actions/users_actions\";\r\n\r\nconst Contact = () => {\r\n  const [loading, setLoading] = useState(null);\r\n  const notification = useSelector((state) => state.notification);\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      email: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      message: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .required(\"Sorry, email is required\")\r\n        .email(\"This is not a valid email\"),\r\n      firstname: Yup.string()\r\n        .required(\"Sorry, firstname is required\")\r\n        .max(25, \"Sorry, the character limit is 25\"),\r\n      lastname: Yup.string()\r\n        .required(\"Sorry, lastname is required\")\r\n        .max(25, \"Sorry, the character limit is 25\"),\r\n      message: Yup.string()\r\n        .required(\"Sorry, the message cannot be empty\")\r\n        .max(500, \"Sorry, the message is too long\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      setLoading(true);\r\n      dispatch(contactMe(values));\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (notification && notification.success) {\r\n      formik.resetForm();\r\n      setLoading(false);\r\n    }\r\n  }, [notification, formik]);\r\n\r\n  const errorHelper = (formik, values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText:\r\n      formik.errors[values] && formik.touched[values]\r\n        ? formik.errors[values]\r\n        : null,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <h1>Contact me</h1>\r\n          <form className=\"mt-3\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"email\"\r\n                label=\"Enter your email\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"email\")}\r\n                {...errorHelper(formik, \"email\")}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"firstname\"\r\n                label=\"Enter your firstname\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"firstname\")}\r\n                {...errorHelper(formik, \"firstname\")}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"lastname\"\r\n                label=\"Enter your lastname\"\r\n                variant=\"outlined\"\r\n                {...formik.getFieldProps(\"lastname\")}\r\n                {...errorHelper(formik, \"lastname\")}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                name=\"message\"\r\n                label=\"Add your message here\"\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={4}\r\n                message\r\n                {...formik.getFieldProps(\"message\")}\r\n                {...errorHelper(formik, \"message\")}\r\n              />\r\n            </div>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              {\" \"}\r\n              Send me a message\r\n            </Button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../utils/loader\";\r\n\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\r\nimport { accountVerify } from \"../../store/actions/users_actions\";\r\n\r\nconst iconStyle = {\r\n  fontSize: \"200px\",\r\n};\r\n\r\nconst AccountVerification = (props) => {\r\n  const [icon, setIcon] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const notification = useSelector((state) => state.notification);\r\n  const dispatch = useDispatch();\r\n  const query = new URLSearchParams(props.location.search);\r\n  const token = query.get(\"t\");\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      dispatch(accountVerify(token));\r\n    } else {\r\n      props.history.push(\"/\");\r\n    }\r\n  }, [dispatch, props.history, token]);\r\n\r\n  useEffect(() => {\r\n    if (notification && notification.error) {\r\n      setIcon(<SentimentDissatisfiedIcon style={iconStyle} />);\r\n      setLoading(false);\r\n      setRedirect(true);\r\n    }\r\n    if (notification && notification.success) {\r\n      setIcon(<Favorite style={iconStyle} />);\r\n      setLoading(false);\r\n      setRedirect(true);\r\n    }\r\n  }, [notification]);\r\n\r\n  useEffect(() => {\r\n    if (redirect) setTimeout(() => props.history.push(\"/\"), 2000);\r\n  }, [redirect, props.history]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? <Loader /> : <div style={{ textAlign: \"center\" }}>{icon}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountVerification;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { addCategory } from \"../../../store/actions/article_actions\";\r\n\r\nconst AddCategory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: { name: \"\" },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string()\r\n        .required(\"Name of the caregory is required\")\r\n        .max(100, \"The max character limit is 100\"),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(addCategory(values));\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  const errorHelper = (formik, values) => ({\r\n    error: formik.errors[values] && formik.touched[values] ? true : false,\r\n    helperText:\r\n      formik.errors[values] && formik.touched[values]\r\n        ? formik.errors[values]\r\n        : null,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <TextField\r\n            style={{ width: \"100%\" }}\r\n            name=\"name\"\r\n            label=\"Enter a category name\"\r\n            variant=\"outlined\"\r\n            {...formik.getFieldProps(\"name\")}\r\n            {...errorHelper(formik, \"name\")}\r\n          />\r\n          <Button\r\n            className=\"mt-2\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Add Category\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AdminLayout from \"../../../hoc/adminLayout\";\r\nimport { Table, Row, Col } from \"react-bootstrap\";\r\nimport AddCategory from \"./addCategory\";\r\nimport { getCategories } from \"../../../store/actions/article_actions\";\r\n\r\nconst Categories = () => {\r\n  const dispatch = useDispatch();\r\n  const articles = useSelector((state) => state.articles);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <AdminLayout section=\"Categories\">\r\n      <Row>\r\n        <Col>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {articles.categories\r\n                ? articles.categories.map((item, index) => (\r\n                    <tr key={item._id}>\r\n                      <td>{item.name}</td>\r\n                    </tr>\r\n                  ))\r\n                : null}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n        <Col>\r\n          <AddCategory />\r\n        </Col>\r\n      </Row>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\nimport SentimentDissatisfiedIcon from \"@material-ui/icons/SentimentDissatisfied\";\r\n\r\nimport ArticleCard from \"../../utils/articleCard\";\r\nimport Loader from \"../../utils/loader\";\r\n\r\nconst SearchResults = (props) => {\r\n  const articles = useSelector((state) => state.articles);\r\n  const query = new URLSearchParams(props.location.search);\r\n  const keywords = query.get(\"keywords\");\r\n  console.log(articles.navSearch);\r\n\r\n  return (\r\n    <>\r\n      {articles.navSearch && articles.navSearch.docs ? (\r\n        <>\r\n          <p className=\"mb-4\">\r\n            <u>Search results for</u>: \"<b>{keywords}</b>\" returned{\" \"}\r\n            <b>{articles.navSearch.totalDocs}</b> Results\r\n          </p>\r\n          <Grid container spacing={2} className=\"article_card\">\r\n            {articles.navSearch.docs.map((item) => (\r\n              <Grid key={item._id} item xs={12} sm={6} lg={3}>\r\n                <ArticleCard article={item} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <div className=\"mt-3\" style={{ textAlign: \"center\" }}>\r\n            {articles.navSearch.totalDocs === 0 ? (\r\n              <SentimentDissatisfiedIcon\r\n                style={{\r\n                  fontSize: \"200px\",\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport GoogleFontLoader from \"react-google-font-loader\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Home from \"./components/home\";\nimport Header from \"./components/navigation/header\";\nimport MainLayout from \"./hoc/mainLayout\";\nimport Auth from \"./components/auth\";\nimport { isAuthUser } from \"./store/actions/users_actions\";\nimport Loader from \"./utils/loader\";\nimport Dashboard from \"./components/dashboard\";\nimport Profile from \"./components/dashboard/profile\";\nimport Articles from \"./components/dashboard/articles\";\nimport AuthGuard from \"./hoc/authGuard\";\nimport Article from \"./components/articles/article\";\nimport AddArticle from \"./components/dashboard/articles/addArticle\";\nimport EditArticle from \"./components/dashboard/articles/editArticle\";\nimport Contact from \"./components/contact\";\nimport AccountVerification from \"./components/auth/verification\";\nimport Categories from \"./components/dashboard/categories\";\nimport SearchResults from \"./components/search\";\n\nconst Routes = () => {\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.users);\n\n  useEffect(() => {\n    dispatch(isAuthUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (users.auth != null) {\n      setLoading(false);\n    }\n  }, [users]);\n\n  return (\n    <BrowserRouter>\n      <Header />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <MainLayout>\n          <Switch>\n            <Route\n              path=\"/dashboard/articles/edit/:id\"\n              component={AuthGuard(EditArticle, true)}\n            />\n            <Route\n              path=\"/dashboard/articles/add\"\n              component={AuthGuard(AddArticle, true)}\n            />\n            <Route\n              path=\"/dashboard/articles\"\n              component={AuthGuard(Articles, true)}\n            />\n            <Route\n              path=\"/dashboard/categories\"\n              component={AuthGuard(Categories)}\n            />\n            <Route path=\"/dashboard/profile\" component={AuthGuard(Profile)} />\n            <Route path=\"/dashboard\" component={AuthGuard(Dashboard)} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route path=\"/verification\" component={AccountVerification} />\n            <Route path=\"/searchresults\" component={SearchResults} />\n            <Route path=\"/article/:id\" component={Article} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </MainLayout>\n      )}\n      <GoogleFontLoader\n        fonts={[\n          { font: \"Roboto\", weights: [300, 400, 900] },\n          { font: \"Fredoka One\" },\n        ]}\n      />\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import {\r\n  AUTH_USER,\r\n  SIGN_OUT,\r\n  CHANGE_USER_EMAIL,\r\n  UPDATE_USER_PROFILE,\r\n  VERIFY_ACCOUNT,\r\n} from \"../types\";\r\n\r\nlet DEFAULT_USER_STATE = {\r\n  data: {\r\n    _id: null,\r\n    email: null,\r\n    firstname: null,\r\n    lastname: null,\r\n    age: null,\r\n    role: null,\r\n    verified: null,\r\n  },\r\n  auth: null,\r\n};\r\n\r\nexport default function usersReducer(state = DEFAULT_USER_STATE, action) {\r\n  switch (action.type) {\r\n    case AUTH_USER:\r\n      return {\r\n        ...state,\r\n        data: { ...state.data, ...action.payload.data },\r\n        auth: action.payload.auth,\r\n      };\r\n    case SIGN_OUT:\r\n      return { ...state, data: { ...DEFAULT_USER_STATE.data }, auth: false };\r\n    case CHANGE_USER_EMAIL:\r\n      return { ...state, data: { ...state.data, email: action.payload } };\r\n    case UPDATE_USER_PROFILE:\r\n      return { ...state, data: { ...action.payload } };\r\n    case VERIFY_ACCOUNT:\r\n      return { ...state, data: { ...state.data, verified: true } };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport articles from \"./articles_reducer\";\r\nimport users from \"./users_reducer\";\r\nimport site from \"./site_reducer\";\r\nimport notification from \"./notification_reducer\";\r\n\r\nconst appReducers = combineReducers({ articles, users, site, notification });\r\n\r\nexport default appReducers;\r\n","import {\r\n  GET_ARTICLES,\r\n  GET_ARTICLE,\r\n  ADD_ARTICLE,\r\n  NAV_SEARCH,\r\n  GET_ADMIN_ARTICLES,\r\n  UPDATE_ARTICLE_STATUS,\r\n  CLEAR_CURRENT_ARTICLE,\r\n  GET_CATEGORIES,\r\n  ADD_CATEGORY,\r\n} from \"../types\";\r\n\r\nexport default function articleReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case GET_ARTICLES:\r\n      return { ...state, articles: action.payload };\r\n    case GET_ARTICLE:\r\n      return { ...state, current: action.payload };\r\n    case ADD_ARTICLE:\r\n      return { ...state, lastAdded: action.payload, success: true };\r\n    case GET_ADMIN_ARTICLES:\r\n      return { ...state, adminArticles: action.payload };\r\n    case UPDATE_ARTICLE_STATUS:\r\n      return {\r\n        ...state,\r\n        adminArticles: { ...state.adminArticles, docs: action.payload },\r\n      };\r\n    case CLEAR_CURRENT_ARTICLE:\r\n      return { ...state, current: \"\" };\r\n    case GET_CATEGORIES:\r\n      return { ...state, categories: action.payload };\r\n    case ADD_CATEGORY:\r\n      return { ...state, categories: action.payload };\r\n    case NAV_SEARCH:\r\n      return { ...state, navSearch: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SITE_LAYOUT } from \"../types\";\r\n\r\nexport default function siteReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SITE_LAYOUT:\r\n      return { ...state, layout: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ERROR_GLOBAL,\r\n  SUCCESS_GLOBAL,\r\n  CLEAR_NOTIFICATION,\r\n  REMOVE_ARTICLE,\r\n} from \"../types\";\r\n\r\nexport default function notificationReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case ERROR_GLOBAL:\r\n      return { ...state, error: true, msg: action.payload };\r\n    case SUCCESS_GLOBAL:\r\n      return { ...state, success: true, msg: action.payload };\r\n    case CLEAR_NOTIFICATION:\r\n      return {};\r\n    case REMOVE_ARTICLE:\r\n      return { ...state, removeArticle: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport appReducers from \"./reducers\";\r\nconst ReduxStore = () => {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const store = createStore(\r\n    appReducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n  return store;\r\n};\r\n\r\nexport default ReduxStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./routes\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/main.css\";\n\nimport { Provider } from \"react-redux\";\nimport ReduxStore from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ReduxStore()}>\n      <Routes />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}